AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "> lambda-promtail: propagate Cloudwatch Logs to Loki via Promtail."

Parameters:
  PromtailAddress:
    Description: "Address for promtail in the form of: https://<user><:loki_key>@<url>/loki/api/v1/push/api/prom/push"
    Type: String
    Default: "http://localhost:8080/loki/api/v1/push"
  TenantId:
    Description: "Required. Tenant ID used to identify source of the logs"
    Type: String
  ReservedConcurrency:
    Description: "The maximum of concurrent executions you want to reserve for the function."
    Type: Number
    Default: 2

Resources:
  LambdaPromtailFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda-promtail/
      Handler: handler
      MemorySize: 128
      Timeout: 60
      EventInvokeConfig:
        MaximumRetryAttempts: 2
      Policies:
        - Statement:
            Effect: Allow
            Action:
              - "logs:DescribeLogGroups"
              - "logs:DescribeLogStreams"
              - "logs:FilterLogEvents"
              - "logs:GetLogEvents"
            Resource: "*"
      ReservedConcurrentExecutions: !Ref ReservedConcurrency
      # # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-vpcconfig.html
      # VpcConfig:
      Runtime: go1.x
      Events:
        WebSvc:
          Type: CloudWatchLogs
          Properties:
            LogGroupName: "/rapticore/web-svc"
            FilterPattern: ""
        ApiSvc:
          Type: CloudWatchLogs
          Properties:
            LogGroupName: "/rapticore/api-svc"
            FilterPattern: ""
        GitlabDiscovery:
          Type: CloudWatchLogs
          Properties:
            LogGroupName: "/aws/lambda/gitlab-discovery"
            FilterPattern: ""
        AwsDiscovery:
          Type: CloudWatchLogs
          Properties:
            LogGroupName: "/rapticore/aws-discovery-svc"
            FilterPattern: ""
        SurveyLambda:
          Type: CloudWatchLogs
          Properties:
            LogGroupName: "/aws/lambda/survey-lambda"
            FilterPattern: ""
        ApiGwHttp:
          Type: CloudWatchLogs
          Properties:
            LogGroupName:
              !Join ["-", ["/aws/apigateway/httpapi", !Ref TenantId]]
            FilterPattern: ""
        ApiGwRest:
          Type: CloudWatchLogs
          Properties:
            LogGroupName:
              !Join ["-", ["/aws/apigateway/restapi", !Ref TenantId]]
            FilterPattern: ""
        Postgres:
          Type: CloudWatchLogs
          Properties:
            LogGroupName:
              !Join ["", ["/aws/rds/cluster/rapticore-db-", !Ref TenantId, "/postgresql"]]
            FilterPattern: ""

      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PROMTAIL_ADDRESS: !Ref PromtailAddress
          TENANT_ID: !Ref TenantId

Outputs:
  LambdaPromtailFunction:
    Description: "Lambda Promtail Function ARN"
    Value: !GetAtt LambdaPromtailFunction.Arn
  LambdaPromtailFunctionIamRole:
    Description: "Implicit IAM Role created for LambdaPromtail function"
    Value: !GetAtt LambdaPromtailFunctionRole.Arn
